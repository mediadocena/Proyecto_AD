CREATE OR REPLACE TYPE DIRECCION AS OBJECT(
CALLE VARCHAR2(25),
CIUDAD VARCHAR2(20),
CODIGO_POST NUMBER(5)
);


CREATE OR REPLACE TYPE PERSONA AS OBJECT(
NUM_CARNET NUMBER,
NOMBRE VARCHAR2(20),
DIREC DIRECCION,
CONSTRUCTOR FUNCTION PERSONA( NUM_CARNET NUMBER,
NOMBRE VARCHAR2,
DIREC DIRECCION)
RETURN SELF AS RESULT,
MEMBER PROCEDURE SET_NUMCARNET(C NUMBER),
MEMBER FUNCTION GET_NUMCARNET RETURN NUMBER,
MEMBER PROCEDURE SET_NOMBRE(C VARCHAR2),
MEMBER FUNCTION GET_NOMBRE RETURN VARCHAR2,
MEMBER PROCEDURE SET_DIREC(C DIRECCION),
MEMBER FUNCTION GET_DIREC RETURN DIRECCION
);

CREATE OR REPLACE TYPE LIBRO AS OBJECT(
COD_LIBRO NUMBER,
CLASE NUMBER,
PRESTADO NUMBER(1),
GENERO VARCHAR2(20),
AUTOR VARCHAR2(20),
TITULO VARCHAR2(20),
EDITOR VARCHAR2(20),
CONSTRUCTOR FUNCTION LIBRO (COD NUMBER, CLASE
NUMBER, PRESTADO NUMBER, GENERO VARCHAR2, AUTOR VARCHAR2, TITULO VARCHAR2, EDITOR VARCHAR2)
RETURN SELF AS RESULT
);
CREATE TABLE USUARIOS OF PERSONA(
NUM_CARNET PRIMARY KEY
);
CREATE TABLE LIBROS OF LIBRO(
COD_LIBRO PRIMARY KEY
);
CREATE TABLE PRESTAMOS(
id NUMBER,
USUARIO REF PERSONA SCOPE IS USUARIOS,
LIBRO REF LIBRO SCOPE IS LIBROS,
FECHA_INICIO DATE,
FECHA_FIN DATE,
PLAZO DATE,
PRIMARY KEY (id)
);
CREATE TABLE HISTORICO(
id NUMBER,
USUARIO PERSONA,
LIBRO LIBRO,
FECHA_INICIO DATE,
FECHA_FIN DATE,
PLAZO DATE,
PRIMARY KEY(id)
);
CREATE SEQUENCE AUTOUSER
MINVALUE 1
START WITH 1
INCREMENT BY 1;
CREATE SEQUENCE AUTOLIBRO
MINVALUE 1
START WITH 1
INCREMENT BY 1;
CREATE SEQUENCE AUTOPRESTAMO
MINVALUE 1
START WITH 1
INCREMENT BY 1;

-------------------------------------------PROCEDURES--------------------------------------------
CREATE PROCEDURE INSERTAR_USUARIOS (NOMBRE VARCHAR2,CALLE VARCHAR2,CIUDAD VARCHAR2,COD_POST NUMBER)IS
BEGIN
    INSERT INTO USUARIOS VALUES(AUTOUSER.nextval,NOMBRE,DIRECCION(CALLE,CIUDAD,COD_POST),0);
END;

CREATE PROCEDURE ACTUALIZAR_USUARIOS (ID NUMBER,NOMBRE VARCHAR2,CALLE VARCHAR2,CIUDAD VARCHAR2,COD_POST NUMBER,PENALIZADO NUMBER)IS
BEGIN
   UPDATE USUARIOS SET 
   NOMBRE = NOMBRE,
   DIREC=DIRECCION(CALLE,CIUDAD,COD_POST),
   PENALIZADO=PENALIZADO
   WHERE NUM_CARNET = ID;
END;

create or replace NONEDITIONABLE PROCEDURE BORRAR_USUARIOS (ID NUMBER)IS
BEGIN
   DELETE FROM USUARIOS WHERE NUM_CARNET = ID;
END;

create or replace NONEDITIONABLE PROCEDURE INSERTAR_LIBROS (CLASE NUMBER,PRESTADO NUMBER,GENERO VARCHAR2,AUTOR VARCHAR2,TITULO VARCHAR2,EDITOR VARCHAR2)IS
BEGIN
    INSERT INTO LIBROS VALUES(AUTOLIBRO.nextval,CLASE,PRESTADO,GENERO,AUTOR,TITULO,EDITOR);
END;

CREATE PROCEDURE ACTUALIZAR_LIBROS (ID NUMBER,CLAS NUMBER,PRES NUMBER,GEN VARCHAR2,AUT VARCHAR2,TITUL VARCHAR2,EDITO VARCHAR2)IS
BEGIN
UPDATE LIBROS SET 
   CLASE= CLAS  ,
   PRESTADO=PRES ,
   GENERO=GEN,
   AUTOR=AUT,
   TITULO = TITUL  ,
   EDITOR= EDITO 
   WHERE COD_LIBRO = ID;
END;

create or replace NONEDITIONABLE PROCEDURE BORRAR_LIBROS (ID NUMBER)IS
BEGIN
   DELETE FROM LIBROS WHERE COD_LIBRO = ID;
END;
-----------------------------------------------------------------------------------
create or replace NONEDITIONABLE PROCEDURE INSERTAR_PRESTAMOS( NUSER IN USUARIOS.NUM_CARNET%TYPE,
	nlib IN LIBROS.COD_LIBRO%TYPE
    )IS
    
    DISP NUMBER;
    CLASE NUMBER;
    PEN NUMBER;
BEGIN
SELECT L.CLASE into CLASE FROM LIBROS L WHERE COD_LIBRO = nlib;
SELECT L.PRESTADO into DISP FROM LIBROS L WHERE COD_LIBRO = nlib;
SELECT PENALIZADO INTO PEN FROM USUARIOS WHERE NUM_CARNET = NUSER;
IF DISP=0 AND PEN = 0 THEN
    IF CLASE = 1 THEN
        UPDATE LIBROS SET PRESTADO=1 WHERE COD_LIBRO = nliB;
        INSERT INTO PRESTAMOS(ID,USUARIO,LIBRO,FECHA_INICIO,FECHA_FIN,PLAZO) SELECT AUTOPRESTAMO.NEXTVAL, REF(U),REF(L),CURRENT_DATE,CURRENT_DATE+10,null FROM USUARIOS U, LIBROS L WHERE L.COD_LIBRO=nlib AND U.NUM_CARNET=NUSER;
        
    END IF;
    IF CLASE = 2 THEN
        UPDATE LIBROS SET PRESTADO=1 WHERE COD_LIBRO = nliB;
        INSERT INTO PRESTAMOS(ID,USUARIO,LIBRO,FECHA_INICIO,FECHA_FIN,PLAZO) SELECT AUTOPRESTAMO.NEXTVAL, REF(U),REF(L),CURRENT_DATE,CURRENT_DATE+20,null FROM USUARIOS U, LIBROS L WHERE L.COD_LIBRO=nlib AND U.NUM_CARNET=NUSER;
        
     END IF;
      IF CLASE = 3 THEN
        UPDATE LIBROS SET PRESTADO=1 WHERE COD_LIBRO = nliB;
        INSERT INTO PRESTAMOS(ID,USUARIO,LIBRO,FECHA_INICIO,FECHA_FIN,PLAZO) SELECT AUTOPRESTAMO.NEXTVAL, REF(U),REF(L),CURRENT_DATE,CURRENT_DATE+30,null FROM USUARIOS U, LIBROS L WHERE L.COD_LIBRO=nlib AND U.NUM_CARNET=NUSER;
        
     END IF;
    
  ELSE
  DBMS_OUTPUT.PUT_LINE('Ya esta prestado');
  END IF;
END;
-----------------------------------------------------------------------------------
create or replace NONEDITIONABLE PROCEDURE BORRAR_PRESTAMOS(IDENT NUMBER)IS
B NUMBER;
C NUMBER;
FECHA DATE;
BEGIN
SELECT DEREF(LIBRO).COD_LIBRO INTO B FROM PRESTAMOS WHERE ID=IDENT;
SELECT DEREF(USUARIO).NUM_CARNET INTO C FROM PRESTAMOS WHERE ID = IDENT;
SELECT FECHA_FIN INTO FECHA FROM PRESTAMOS WHERE ID=IDENT;
    IF FECHA < CURRENT_DATE THEN
        UPDATE USUARIOS SET PENALIZADO=1 WHERE NUM_CARNET = C;
    END IF;
UPDATE LIBROS SET PRESTADO = 0 WHERE cod_libro=B;
DELETE FROM PRESTAMOS WHERE ID=IDENT;
END;

create or replace NONEDITIONABLE PROCEDURE DEVOLVER_LIBRO(COD NUMBER)IS
BEGIN
UPDATE LIBROS SET PRESTADO = 0 WHERE cod_libro=COD;
END;

create or replace NONEDITIONABLE TRIGGER RECUPERAR_HISTORICO AFTER DELETE ON PRESTAMOS
FOR EACH ROW
BEGIN

INSERT INTO HISTORICO (ID,USUARIO,LIBRO,FECHA_INICIO,FECHA_FIN,PLAZO) VALUES(AUTOHISTORICO.NEXTVAL,DEREF(:OLD.USUARIO),DEREF(:OLD.LIBRO),:OLD.FECHA_INICIO,:OLD.FECHA_FIN,:OLD.PLAZO);

END;
-------------------------------------------------------------------------------------------
create or replace PACKAGE OBTENER_USUARIOS
AS
  TYPE cursor_1 IS REF CURSOR;
  PROCEDURE GET_USUARIOS(USUARIOS OUT cursor_1);
END;

create or replace PACKAGE BODY OBTENER_USUARIOS 
IS
 PROCEDURE GET_USUARIOS(USUARIOS OUT cursor_1) IS
 BEGIN
  OPEN USUARIOS FOR
  SELECT NUM_CARNET, NOMBRE, U.DIREC.CALLE, U.DIREC.CIUDAD, U.DIREC.CODIGO_POST, PENALIZADO FROM USUARIOS U;
  END;
END;
---------------------------------------------------------------------------------------
create or replace PACKAGE OBTENER_LIBROS
AS
  TYPE cursor_1 IS REF CURSOR;
  PROCEDURE GET_LIBROS(LIBROS OUT cursor_1);
END;

create or replace PACKAGE BODY OBTENER_LIBROS 
IS
 PROCEDURE GET_LIBROS(LIBROS OUT cursor_1) IS
 BEGIN
  OPEN LIBROS FOR
  SELECT COD_LIBRO, CLASE, PRESTADO, GENERO, AUTOR, TITULO, EDITOR FROM LIBROS L;
  END;
END;

-------------------------------------------------------------------------------------------

create or replace PACKAGE OBTENER_PRESTAMOS
AS
  TYPE cursor_1 IS REF CURSOR;
  PROCEDURE GET_PRESTAMOS(PRESTAMOS OUT cursor_1);
END;

create or replace PACKAGE BODY OBTENER_PRESTAMOS 
IS
 PROCEDURE GET_PRESTAMOS(PRESTAMOS OUT cursor_1) IS
 BEGIN
  OPEN PRESTAMOS FOR
  SELECT ID, P.USUARIO.NUM_CARNET,P.USUARIO.NOMBRE,P.USUARIO.DIREC,P.USUARIO.PENALIZADO, P.LIBRO.COD_LIBRO,P.LIBRO.CLASE,P.LIBRO.PRESTADO,P.LIBRO.GENERO,P.LIBRO.TITULO,P.LIBRO.EDITOR, FECHA_INICIO, FECHA_FIN, PLAZO FROM PRESTAMOS P;
  END;
END;
--------------------------------------------------------------------------------------------
create or replace PACKAGE OBTENER_HISTORICO
AS
  TYPE cursor_1 IS REF CURSOR;
  PROCEDURE GET_HISTORICO(HISTORICO OUT cursor_1);
END;

create or replace PACKAGE BODY OBTENER_HISTORICO 
IS
 PROCEDURE GET_HISTORICO(HISTORICO OUT cursor_1) IS
 BEGIN
  OPEN HISTORICO FOR
  SELECT ID, H.USUARIO.NUM_CARNET,H.USUARIO.NOMBRE,H.USUARIO.DIREC,H.USUARIO.PENALIZADO, H.LIBRO.COD_LIBRO,H.LIBRO.CLASE,H.LIBRO.PRESTADO,H.LIBRO.GENERO,H.LIBRO.TITULO,H.LIBRO.EDITOR, FECHA_INICIO, FECHA_FIN, PLAZO FROM HISTORICO H;
  END;
END;
